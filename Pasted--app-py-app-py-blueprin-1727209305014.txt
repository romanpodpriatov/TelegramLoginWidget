Убедитесь, что маршрут зарегистрирован в app.py:
В вашем app.py должен быть зарегистрирован blueprint auth, чтобы маршруты из auth.py были доступны.

python
Копировать код
# app.py
from quart import Quart, render_template, redirect, url_for, jsonify
from quart_auth import QuartAuth, current_user, login_required, logout_user, login_user
from sqlalchemy.future import select
from hypercorn.asyncio import serve
from hypercorn.config import Config as HyperConfig
from config import Config
from models import Base, User, Auction
from auth import auth  # Импорт blueprint
from admin import admin  # Импорт других blueprint'ов
from telegram_bot import setup_bot, send_notification
import asyncio
import os
import logging

from db import engine, async_session

# Настройка логирования
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

app = Quart(__name__)
app.config.from_object(Config)

# Инициализация QuartAuth
auth_manager = QuartAuth(app)

# Регистрация Blueprints
app.register_blueprint(auth)
app.register_blueprint(admin)

# Создание таблиц перед запуском сервера
@app.before_serving
async def startup():
    async with engine.begin() as conn:
        await conn.run_sync(Base.metadata.create_all)
    logger.info("Database tables created")

# Маршруты
@app.route('/')
async def index():
    return await render_template('index.html')

# Остальные маршруты...

if __name__ == '__main__':
    asyncio.run(main())
Проверьте data-auth-url в виджете Telegram Login:
Убедитесь, что data-auth-url указывает на корректный публичный HTTPS URL вашего маршрута /auth/telegram.

Пример:

html
Копировать код
<!-- templates/auth/login.html -->
<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <title>Вход</title>
</head>
<body>
    <h1>Вход в систему</h1>
    
    <!-- Telegram Login Widget -->
    <script async src="https://telegram.org/js/telegram-widget.js?7"
            data-telegram-login="YourBotUsername"  <!-- Замените на имя вашего бота без @ -->
            data-auth-url="https://yourdomain.com/auth/telegram"  <!-- Замените на ваш публичный URL -->
            data-button-color="#2cab37">
    </script>
    
    <!-- Дополнительная форма входа (опционально) -->
    <form method="POST" action="{{ url_for('auth.login') }}">
        <label for="username">Имя пользователя:</label>
        <input type="text" id="username" name="username" required>
        <br>
        <label for="password">Пароль:</label>
        <input type="password" id="password" name="password" required>
        <br>
        <button type="submit">Войти</button>
    </form>
    
    {% if error %}
        <p style="color:red;">{{ error }}</p>
    {% endif %}
</body>
</html>
Важно:

data-telegram-login: Используйте имя пользователя вашего бота без символа @.
data-auth-url: Этот URL должен быть публичным и доступным через HTTPS. Для локальной разработки используйте такие инструменты, как ngrok, чтобы создать публичный HTTPS туннель.